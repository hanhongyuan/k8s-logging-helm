{{- if not .Values.logstash_indexer.beats }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  metadata:
  name: {{ .Release.Name }}-kafka
  labels:
{{- include "logging.labels" . | indent 2}}
spec:
  selector:
    matchLabels:
      type: kafka
{{- include "logging.metadata.labels" . | indent 4 }}     
  serviceName: kafka
  replicas: {{ .Values.kafka.replicas }}
  template:
    metadata:
      labels:
        type: kafka
{{- include "logging.metadata.labels" . | indent 6 }}
    spec:
      priorityClassName: logging-critical
      {{ with .Values.kafka.affinity -}}     
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{ with .Values.kafka.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{ end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      - name: init
        image: {{ .Values.init_container_image.registry }}{{ .Values.init_container_image.repository }}:{{ .Values.init_container_image.tag }}
        command: ["sh", "-c", "/init.sh {{ .Release.Name }}-zk-{{ (sub (.Values.zookeeper.replicas | int) 1) }}.zk 2181"]
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: "/init.sh"
          subPath: init.sh
          name: init
      containers:
      - name: kafka
        image: wurstmeister/kafka:{{ .Values.kafka.tag }}
        ports:
        - containerPort: 9092
          name: kafka
        - containerPort: 9093
          name: broker
        - containerPort: 12345
          name: jmx
        resources:
{{ toYaml .Values.kafka.resources | indent 10 }}
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zk-svc.{{ .Release.Namespace}}.svc.cluster.local:2181/kafka/logging
        - name: BROKER_ID_COMMAND
          value: "hostname | awk -F'-' '{print $NF}'"
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://:9092
        - name: KAFKA_HEAP_OPTS
          value: "-Xmx{{ .Values.kafka.heap_size }} -Xms{{ .Values.kafka.heap_size }}"
        lifecycle:
          preStop:
            exec:
              command: ["/opt/kafka/bin/kafka-server-stop.sh"]
        readinessProbe:
          tcpSocket:
            port: kafka
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: kafka-data
          mountPath: /kafka  
      terminationGracePeriodSeconds: 60
      volumes:
      - name: init
        configMap:
          name: {{ .Release.Name}}-init
          defaultMode: 0755    
  volumeClaimTemplates:
  - metadata:
      name: kafka-data
    spec:
      {{- with .Values.storage_class }}
      storageClassName: {{ . | quote }}
      {{- end }}
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.kafka.storage }}
{{- end }}          